name: CI

on: [push, pull_request]

jobs:
  build_ubuntu:
    runs-on: ubuntu-20.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build setup
        run: ./setup-build.sh

      - name: Build
        run: ./build.sh

      - uses: actions/upload-artifact@v3
        with:
          name: binary_package
          path: upload

      - name: Set and push nightly tag
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: git tag -f nightly && git push -f origin nightly:refs/tags/nightly

      - name: Upload nightly release assets
        if: ${{ github.repository == 'verifast/verifast' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: actions/github-script@v6
        with:
          script: |
            await require('./upload-release-asset.js')({
              github,
              context,
              core,
              assetName: 'verifast-' + process.env.VFVERSION + '-linux.tar.gz',
              assetPath: 'upload/verifast-nightly.tar.gz',
              assetsToDeleteRegex: /-linux\.tar\.gz$/,
              tag: 'nightly'
            });

      - name: Compute artifact hashes
        id: hash
        #if: ${{ github.repository == 'verifast/verifast' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          cd upload && mv verifast-nightly.tar.gz verifast-$VFVERSION-linux.tar.gz && echo "artifact_hashes=$(sha256sum * | base64 -w0)" >> "$GITHUB_OUTPUT"
          echo "artifact_name=verifast-$VFVERSION-linux.tar.gz" >> "$GITHUB_OUTPUT"

    outputs:
      artifact_hashes: ${{ steps.hash.outputs.artifact_hashes }}
      artifact_name: ${{ steps.hash.outputs.artifact_name }}

  # Sign in a separate job to limit ID token exposure
  sign_ubuntu:
    needs: [build_ubuntu]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: binary_package

      - name: Install cosign
        #if: ${{ github.repository == 'verifast/verifast' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: sigstore/cosign-installer@v3.0.2

      - name: Sign artifact hashes
        #if: ${{ github.repository == 'verifast/verifast' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          echo ${{ needs.build_ubuntu.outputs.artifact_hashes }} | base64 -d > ARTIFACT_SHA256SUMS
          unzip binary_package.zip
          sha256sum -c ARTIFACT_SHA256SUMS || exit 1
          mkdir -p upload
          cosign sign-blob -y ${{ needs.build_ubuntu.outputs.artifact_name }} --output-certificate upload/${{ needs.build_ubuntu.outputs.artifact_name }}-keyless.pem --output-signature upload/${{ needs.build_ubuntu.outputs.artifact_name }}-keyless.sig

      - name: Upload signature
        uses: actions/upload-artifact@v3
        with:
          name: cosign-signature

  build_macos:
    runs-on: macos-11

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Remove conflicting Python file (issue 223)
        run: rm /usr/local/bin/2to3

      - name: Build setup
        run: ./setup-build.sh

      - name: Build
        run: ./build.sh

      - uses: actions/upload-artifact@v3
        with:
          name: binary_package
          path: upload

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: vfide_libraries
          path: src/vfide-libraries.log

      - name: Set and push nightly tag
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: git tag -f nightly && git push -f origin nightly:refs/tags/nightly

      - name: Upload nightly release assets
        if: ${{ github.repository == 'verifast/verifast' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: actions/github-script@v6
        with:
          script: |
            await require('./upload-release-asset.js')({
              github,
              context,
              core,
              assetName: 'verifast-' + process.env.VFVERSION + '-macos.tar.gz',
              assetPath: 'upload/verifast-nightly-osx.tar.gz',
              assetsToDeleteRegex: /-macos\.tar\.gz$/,
              tag: 'nightly'
            });

      - name: Compute artifact hashes
        id: hash
        #if: ${{ github.repository == 'verifast/verifast' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          cd upload && mv verifast-nightly.tar.gz verifast-$VFVERSION-linux.tar.gz && echo "artifact_hashes=$(shasum -a 256 * | base64)" >> "$GITHUB_OUTPUT"
          echo "artifact_name=verifast-$VFVERSION-macos.tar.gz" >> "$GITHUB_OUTPUT"

    outputs:
      artifact_hashes: ${{ steps.hash.outputs.artifact_hashes }}
      artifact_name: ${{ steps.hash.outputs.artifact_name }}

  # Sign in a separate job to limit ID token exposure
  sign_macos:
    needs: [build_macos]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Install cosign
        #if: ${{ github.repository == 'verifast/verifast' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: sigstore/cosign-installer@v3.0.2

      - name: Sign artifact hashes
        #if: ${{ github.repository == 'verifast/verifast' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          echo ${{ needs.build_ubuntu.outputs.artifact_hashes }} | base64 -d > ARTIFACT_SHA256SUMS
          cosign sign-blob -y ARTIFACT_SHA256SUMS

  build_windows:
    runs-on: windows-2019

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Add vcvarsall to PATH
        run: echo "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build setup
        run: ./setup-windows.bat

      - name: Build
        run: c:/cygwin64/bin/bash -lc 'cd $GITHUB_WORKSPACE/src && make nightly VERBOSE=yes GTK=/cygdrive/c/vfdeps'

      - uses: actions/upload-artifact@v3
        with:
          name: binary_package
          path: src/verifast-nightly.zip

      - name: Set and push nightly tag
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        shell: bash
        run: git tag -f nightly && git push -f origin nightly:refs/tags/nightly

      - name: Upload nightly release assets
        if: ${{ github.repository == 'verifast/verifast' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: actions/github-script@v6
        with:
          script: |
            await require('./upload-release-asset.js')({
              github,
              context,
              core,
              assetName: 'verifast-' + process.env.VFVERSION + '-windows.zip',
              assetPath: 'src/verifast-nightly.zip',
              assetsToDeleteRegex: /-windows\.zip$/,
              tag: 'nightly'
            });
